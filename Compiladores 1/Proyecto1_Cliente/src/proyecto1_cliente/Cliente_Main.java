/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto1_cliente;

import java.awt.event.KeyEvent;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.*;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.JSONValue;
import org.json.simple.parser.JSONParser;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeModel;
import  java.util.Iterator ;
import javax.swing.JTree;
import javax.swing.tree.MutableTreeNode;

/**
 *
 * @author Carlos
 */
public class Cliente_Main extends javax.swing.JFrame {
        JFileChooser seleccionado = new JFileChooser();

    private int numeroLinea = 1;
    final String HOST = "localhost";
    final int PUERTO=5000;
    Socket sc;
    ObjectOutputStream mensaje;
    DataInputStream entrada;
    
     //-------------------------------------------Analizador--------------------------------------------------------------
        Sintactico sintactico;
        Lexico lexico;
        
        
        //------------------------------------JSON------------------------------------------------------------------
      JSONArray score=new JSONArray();
      JSONArray clases=new JSONArray();
      JSONArray variables=new JSONArray();
      JSONArray metodos=new JSONArray();
      JSONArray comentarios=new JSONArray();
          JSONObject innerObj;
     JSONObject innerObj1;
      JSONObject innerObj2;
    /**
     * Creates new form Cliente_Main
     */
    public Cliente_Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenu8 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();
        jMenu9 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        jMenu3.setText("jMenu3");

        jMenu6.setText("jMenu6");

        jMenu8.setText("jMenu8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextArea1CaretUpdate(evt);
            }
        });
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextArea1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);
        jTextArea1.setLineWrap(true);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("1");
        jTextArea2.setAutoscrolls(false);
        jTextArea2.setEnabled(false);
        jScrollPane2.setViewportView(jTextArea2);
        jTextArea2.setLineWrap(true);

        jLabel1.setText("Fila");

        jLabel2.setText("Columna");

        jLabel3.setText("0");

        jLabel4.setText("0");

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jTextArea3.setAutoscrolls(false);
        jScrollPane3.setViewportView(jTextArea3);
        jTextArea3.setLineWrap(true);

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane4.setViewportView(jTextArea4);

        jScrollPane5.setViewportView(jTree1);

        jMenu4.setText("Archivo");
        jMenu4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu4ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Crear");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem1);

        jMenuItem2.setText("Abrir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem2);

        jMenuItem3.setText("Guardar");
        jMenu4.add(jMenuItem3);

        jMenuItem4.setText("Eliminar");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Analizar Proyectos");
        jMenu5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu5MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu5);

        jMenu7.setText("Analizar");
        jMenu7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu7MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu7);

        jMenu9.setText("Reportes");

        jMenuItem5.setText("Errores");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem5);

        jMenuItem6.setText("Arbol");
        jMenuItem6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem6MouseClicked(evt);
            }
        });
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem6);

        jMenuBar1.add(jMenu9);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(160, 160, 160)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 917, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(243, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 849, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed
//-----------------------------------------Analizar Proyectos----------------------------------------------------------
    private void jMenu5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu5MouseClicked
         String enviar="C:\\Users\\Carlos\\Desktop\\Calificacion\\pro1";
            String enviar2="C:\\Users\\Carlos\\Desktop\\Calificacion\\pro2";
            
            JFileChooser fc=new JFileChooser();
            fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            int returnVal=fc.showOpenDialog(this);
            if(returnVal==JFileChooser.APPROVE_OPTION){
                enviar=fc.getSelectedFile().getAbsolutePath();
            }
            fc=new JFileChooser();
            fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            returnVal=fc.showOpenDialog(this);
            if(returnVal==JFileChooser.APPROVE_OPTION){
                enviar2=fc.getSelectedFile().getAbsolutePath();
            }
            
            ArrayList<String> address= new ArrayList<String>();
            address.add(enviar);
            address.add(enviar2);
            
            
            
            try
            {
                sc = new Socket( HOST , PUERTO ); /*conectar a un servidor en localhost con puerto 5000*/
                //creamos el flujo de datos por el que se enviara un mensaje
                mensaje =new ObjectOutputStream(sc.getOutputStream());
                //enviamos el mensaje
                mensaje.writeObject(address);
                System.out.println("obteniendo entrada");
                //-----------------obtener mensaje de vuelta------------------------------
                String respuesta="";
                ObjectInputStream ois=new ObjectInputStream(sc.getInputStream());
                respuesta=(String)ois.readObject();
                System.out.println("el mensaje fue"+respuesta);
                
                FileReader response=new FileReader(respuesta);                
                //----------------------------------Decodificar JSON----------------------------------
                JSONParser parser=new JSONParser();
                JSONObject obj=(JSONObject)parser.parse(response);
                 score=(JSONArray)obj.get("score");
                 clases=(JSONArray)obj.get("Clases");
                 variables=(JSONArray)obj.get("Variables");
                 metodos=(JSONArray)obj.get("Metodos");
                 comentarios=(JSONArray)obj.get("Comentarios");
                
                Iterator i;
                
                i=clases.iterator();

                while(i.hasNext()){
                    
                    JSONObject innerObj=(JSONObject)i.next();
                    System.out.println("Clase "+innerObj.get("Nombre")+ " con clase "+innerObj.get("Nombre2"));
                }
                
                
                
                
                
                
                
                sc.close();

                //cerramos la conexión
            }catch(Exception e ){}
    }//GEN-LAST:event_jMenu5MouseClicked

    private void jTextArea1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextArea1CaretUpdate
       JTextArea editArea = (JTextArea)evt.getSource();
        int linea = 1;
        int columna = 1;

        try {
          int caretpos = jTextArea1.getCaretPosition();
          linea= jTextArea1.getLineOfOffset(caretpos);
          columna = caretpos - jTextArea1.getLineStartOffset(linea);

          // Ya que las lÃ­neas las cuenta desde la 0
          linea += 1;
        } catch(Exception ex) { }

        // Actualizamos el estado
        actualizarEstado(linea, columna);
    }//GEN-LAST:event_jTextArea1CaretUpdate

    private void jTextArea1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyTyped
       char tecla = evt.getKeyChar();
        if ((int) tecla == KeyEvent.VK_ENTER) {
            numeroLinea++;
            String num = jTextArea2.getText() + '\n' + numeroLinea;
            jTextArea2.setText(num);
        }
        if ((int) tecla == KeyEvent.VK_BACK_SPACE || (int) tecla == KeyEvent.VK_DELETE) {

            //El while es pos si se eliminan varias lineas a la vez
            while (numeroLinea > jTextArea1.getLineCount()) {
                String num = jTextArea2.getText();

                //Cuando el numero de lineas es solo un digito
                if (jTextArea1.getLineCount() < numeroLinea) {
                    if (numeroLinea < 10) {
                        num = num.substring(0, num.length() - 2);
                        jTextArea2.setText(num);
                        numeroLinea--;
                    }
                    //Cuando el numero de lineas son dos digitos
                    if (numeroLinea > 9 && numeroLinea < 100) {
                        num = num.substring(0, num.length() - 3);
                        jTextArea2.setText(num);
                        numeroLinea--;
                    }
                    //Cuando el numero de lineas son 3 digidos
                    if (numeroLinea > 99 && numeroLinea < 1000) {
                        num = num.substring(0, num.length() - 4);
                        jTextArea2.setText(num);
                        numeroLinea--;
                    }
                }
            }
        }
        //Por si se pegan varias lineas a la vez
        if ((int) tecla == 22) {
            while (numeroLinea < jTextArea1.getLineCount()) {
                numeroLinea++;
                String num = jTextArea2.getText() + '\n' + numeroLinea;
                jTextArea2.setText(num);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jTextArea1KeyTyped
//--------------------------------------------------------Analizar HTML-------------------------------------------------------------
    private void jMenu7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu7MouseClicked
        Guardar();
        Analizar();
    }//GEN-LAST:event_jMenu7MouseClicked
//------------------------------------------------------Click para crear el arbol-----------------------------------------
    private void jMenuItem6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem6MouseClicked
    
    }//GEN-LAST:event_jMenuItem6MouseClicked

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
                 /*-------------------jtreeeeeeeeeeeeeeeeeeeeeeeeeeeeee*--/*/      
        DefaultMutableTreeNode raiz=new DefaultMutableTreeNode("json");
        
        DefaultMutableTreeNode scores=new DefaultMutableTreeNode("Score");
        DefaultMutableTreeNode clse=new DefaultMutableTreeNode("CLASES");
        DefaultMutableTreeNode variable=new DefaultMutableTreeNode("VARIABLES");
        DefaultMutableTreeNode met=new DefaultMutableTreeNode("METODOS");
        raiz.add(scores);
        raiz.add(clse);
          raiz.add(variable);
              raiz.add(met);
          
      /*------------------------------SCORE------------------------------------*/
                   DefaultMutableTreeNode s=new DefaultMutableTreeNode("");
                   s.setUserObject(score);
                   scores.add(s);
                   
                   
                   /*------------------------------CLASES-----------------------*/
                       
                Iterator i;
                
                i=clases.iterator();
                  while(i.hasNext()){
      innerObj=(JSONObject)i.next();
      System.out.println("Clase "+innerObj.get("Nombre")+ " con clase "+innerObj.get("Nombre2"));
                                              
DefaultMutableTreeNode clas=new DefaultMutableTreeNode("");
clas.setUserObject(innerObj.get("Nombre"));
clse.add(clas);
                     
                   
DefaultMutableTreeNode clas1=new DefaultMutableTreeNode("");
clas1.setUserObject(innerObj.get("Nombre2"));
clse.add(clas1);
                } 

                                      
 /*-------------------------VARIABLEs---------------------*/   
 
  Iterator j;
          j=variables.iterator();
           while(j.hasNext()){
        innerObj1=(JSONObject)j.next();
         //System.out.println("Clase "+innerObj1.get("Nombre"));
   DefaultMutableTreeNode var=new DefaultMutableTreeNode("");
var.setUserObject(innerObj1.get("Nombre"));
variable.add(var);

                    
                }
 

/*-----------------------------metodos--------------------------*/
  Iterator h;
       h=metodos.iterator();
  while(h.hasNext()){
    innerObj2=(JSONObject)h.next();
       DefaultMutableTreeNode me=new DefaultMutableTreeNode("");
me.setUserObject(innerObj2.get("Nombre"));
met.add(me);
                    
                }
/*agregar al arbol-------*/
             DefaultTreeModel modelo= new DefaultTreeModel(raiz);       
        this.jTree1.setModel(modelo);  
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    
    //-------------------------------------------------------Errores HTML--------------------------------------------------
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
         String ruta="Errores.html";
               File archivo1 = new File(ruta);
            String salida = "";
            salida += "<center><b><h1>Lista de Errores Cliente</h1></b></center><center><table border=\"1\" style=\"BORDER:DOUBLE 10PX Black\">"
                    + "<tr style=\"font-weight:bold\"><td>No.</td><td>Descripcion del Error</td></tr>";
            salida += "<tr><td>" + 1 + "</td><td>" +Sintactico.errores + "</td></tr>";
            try{
            salida += "</table></center>";
            BufferedWriter archivo;
              archivo= new BufferedWriter(new FileWriter(archivo1));
            archivo.write(salida);
            archivo.close();
            }catch(IOException e){}
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenu4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu4ActionPerformed
       jTextArea1.setText("");
    }//GEN-LAST:event_jMenu4ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
         FileReader fr = null;
         BufferedReader br = null;
         try{
            if(seleccionado.showOpenDialog(null)==seleccionado.APPROVE_OPTION){
		String direccion=seleccionado.getSelectedFile().getAbsolutePath();
		File fileDir = new File(direccion);
                br = new BufferedReader(new InputStreamReader(new FileInputStream(fileDir), "UTF-8"));
                jTextArea1.read(br, null);     
                }
		}catch(Exception ex){
                    ex.printStackTrace();
		}
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
           jTextArea1.setText("");
    }//GEN-LAST:event_jMenuItem4ActionPerformed
    private void actualizarEstado(int linea, int columna) {
        jLabel3.setText("" + linea);
        jLabel4.setText("" + columna);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente_Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente_Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente_Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente_Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente_Main().setVisible(true);
            }
        });
    }
    
    //-------------------------------------generar el txt--------------------------
    public void Guardar(){
        File fichero=new File("fichero.txt");
        PrintWriter writer;
        try{
          writer = new PrintWriter(fichero);
            writer.print(jTextArea1.getText());
            writer.close();
            
        }catch(FileNotFoundException ex){ }
    }

    //-------------------------------------Analiza----------------------------------
    public void Analizar(){
        try{
            jTextArea3.setText("");
        Reader reader = new BufferedReader(new FileReader("fichero.txt"));
        lexico = new Lexico (reader);  
            sintactico= new Sintactico(lexico);
            Sintactico.errores="";
            Sintactico.score=score;
            Sintactico.varia=variables;
            Sintactico.metodos=metodos;
            Sintactico.clases=clases;
            Sintactico.variables=new ArrayList<Object[]>();
            sintactico.parse();
            jTextArea3.setText(Sintactico.errores);
	//----------------------------------------------------crear el html----------------------------------------	
        crearHtml(sintactico.html);
        }catch(Exception ex){
           
        }
    }
    
    public void crearHtml(String cuerpo){
        FileWriter writer=null;
        File miDir = new File (".");
        try{
             writer=new FileWriter("salida.html");
            BufferedWriter bw=new BufferedWriter(writer);
             bw.write(cuerpo);
            bw.close();
            
        }catch(IOException e){
            System.out.println(e.getMessage());
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
